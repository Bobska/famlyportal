# Generated by Django 5.2.5 on 2025-09-07 06:57

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the account', max_length=100)),
                ('account_type', models.CharField(choices=[('root', 'Root Account'), ('income', 'Income Account'), ('spending', 'Spending Account')], help_text='Type of account: root, income, or spending', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description of the account purpose')),
                ('color', models.CharField(default='#007bff', help_text='Color code for visual representation (hex format)', max_length=7)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this account is currently active')),
                ('date_activated', models.DateField(blank=True, help_text='Date when account was activated', null=True)),
                ('date_deactivated', models.DateField(blank=True, help_text='Date when account was deactivated', null=True)),
                ('sort_order', models.IntegerField(default=0, help_text='Order for sorting accounts within same parent')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent account for hierarchical structure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='budget_allocation.account')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('family', 'name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='AccountHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('created', 'Created'), ('activated', 'Activated'), ('deactivated', 'Deactivated'), ('renamed', 'Renamed'), ('moved', 'Moved')], help_text='Type of action performed', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the action occurred')),
                ('old_value', models.TextField(blank=True, help_text='Previous value before change')),
                ('new_value', models.TextField(blank=True, help_text='New value after change')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the change')),
                ('account', models.ForeignKey(help_text='Account this history entry relates to', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='budget_allocation.account')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Account History',
                'verbose_name_plural': 'Account Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='AccountLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Original loan amount', max_digits=10)),
                ('remaining_amount', models.DecimalField(decimal_places=2, help_text='Amount still owed', max_digits=10)),
                ('weekly_interest_rate', models.DecimalField(decimal_places=4, help_text='Weekly interest rate (as decimal, e.g. 0.0200 for 2%)', max_digits=5)),
                ('loan_date', models.DateField(help_text='Date when loan was created')),
                ('total_interest_charged', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total interest charged so far', max_digits=10)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this loan is still active')),
                ('borrower_account', models.ForeignKey(help_text='Account borrowing the money', on_delete=django.db.models.deletion.CASCADE, related_name='loans_as_borrower', to='budget_allocation.account')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
                ('lender_account', models.ForeignKey(help_text='Account lending the money', on_delete=django.db.models.deletion.CASCADE, related_name='loans_as_lender', to='budget_allocation.account')),
            ],
            options={
                'verbose_name': 'Account Loan',
                'verbose_name_plural': 'Account Loans',
                'ordering': ['-loan_date'],
            },
        ),
        migrations.CreateModel(
            name='FamilySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('week_start_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0, help_text='Day of week when budget week starts (0=Monday, 6=Sunday)')),
                ('default_interest_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0200'), help_text='Default weekly interest rate for loans (as decimal)', max_digits=5)),
                ('auto_allocate_enabled', models.BooleanField(default=True, help_text='Whether to automatically allocate budget based on templates')),
                ('auto_repay_enabled', models.BooleanField(default=False, help_text='Whether to automatically repay loans when possible')),
                ('notification_threshold', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Threshold amount for notifications', max_digits=10)),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Family Settings',
                'verbose_name_plural': 'Family Settings',
            },
        ),
        migrations.CreateModel(
            name='WeeklyPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField(help_text='Start date of the weekly period')),
                ('end_date', models.DateField(help_text='End date of the weekly period')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this week is currently active')),
                ('is_allocated', models.BooleanField(default=False, help_text='Whether budget has been allocated for this week')),
                ('allocation_locked', models.BooleanField(default=False, help_text='Whether allocations are locked for this week')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Weekly Period',
                'verbose_name_plural': 'Weekly Periods',
                'ordering': ['-start_date'],
                'unique_together': {('family', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_date', models.DateField(help_text='Date when transaction occurred')),
                ('description', models.CharField(help_text='Description of the transaction', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10)),
                ('transaction_type', models.CharField(choices=[('income', 'Income'), ('expense', 'Expense')], help_text='Type of transaction: income or expense', max_length=10)),
                ('payee', models.CharField(blank=True, help_text='Who the transaction was with', max_length=100)),
                ('reference', models.CharField(blank=True, help_text='Reference number or ID', max_length=50)),
                ('is_reconciled', models.BooleanField(default=False, help_text='Whether this transaction has been reconciled')),
                ('account', models.ForeignKey(help_text='Account this transaction affects', on_delete=django.db.models.deletion.CASCADE, related_name='allocation_transactions', to='budget_allocation.account')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='budget_allocation_transactions', to='accounts.family')),
                ('week', models.ForeignKey(help_text='Week this transaction belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='allocation_transactions', to='budget_allocation.weeklyperiod')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('payment_date', models.DateField(help_text='Date when payment was made')),
                ('notes', models.TextField(blank=True, help_text='Notes about this payment')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
                ('loan', models.ForeignKey(help_text='Loan this payment is for', on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='budget_allocation.accountloan')),
                ('week', models.ForeignKey(help_text='Week this payment was made', on_delete=django.db.models.deletion.CASCADE, related_name='loan_payments', to='budget_allocation.weeklyperiod')),
            ],
            options={
                'verbose_name': 'Loan Payment',
                'verbose_name_plural': 'Loan Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount being allocated', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Notes about this allocation')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
                ('from_account', models.ForeignKey(help_text='Account money is allocated from', on_delete=django.db.models.deletion.CASCADE, related_name='allocations_from', to='budget_allocation.account')),
                ('to_account', models.ForeignKey(help_text='Account money is allocated to', on_delete=django.db.models.deletion.CASCADE, related_name='allocations_to', to='budget_allocation.account')),
                ('week', models.ForeignKey(help_text='Week this allocation belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='allocations', to='budget_allocation.weeklyperiod')),
            ],
            options={
                'verbose_name': 'Allocation',
                'verbose_name_plural': 'Allocations',
                'ordering': ['-week__start_date', 'to_account__name'],
            },
        ),
        migrations.CreateModel(
            name='BudgetTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocation_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage of Income'), ('range', 'Range Based'), ('calculated', 'Calculated Amount')], help_text='How the allocation amount is calculated', max_length=20)),
                ('weekly_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed weekly amount (for fixed allocation type)', max_digits=10, null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of income (for percentage allocation type)', max_digits=5, null=True)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum amount (for range allocation type)', max_digits=10, null=True)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum amount (for range allocation type)', max_digits=10, null=True)),
                ('priority', models.IntegerField(choices=[(1, 'Priority 1 (Highest)'), (2, 'Priority 2'), (3, 'Priority 3'), (4, 'Priority 4'), (5, 'Priority 5 (Lowest)')], default=3, help_text='Priority level for allocation (1=highest, 5=lowest)')),
                ('is_essential', models.BooleanField(default=False, help_text='Whether this is an essential allocation')),
                ('never_miss', models.BooleanField(default=False, help_text='Whether this allocation should never be skipped')),
                ('auto_allocate', models.BooleanField(default=True, help_text='Whether to automatically allocate this amount')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is currently active')),
                ('annual_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Annual amount for bill planning', max_digits=10, null=True)),
                ('due_date', models.DateField(blank=True, help_text='Due date for bill planning', null=True)),
                ('current_saved', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount currently saved for this bill', max_digits=10)),
                ('account', models.ForeignKey(help_text='Account this template applies to', on_delete=django.db.models.deletion.CASCADE, related_name='budget_templates', to='budget_allocation.account')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Budget Template',
                'verbose_name_plural': 'Budget Templates',
                'ordering': ['priority', 'account__name'],
                'unique_together': {('family', 'account')},
            },
        ),
    ]
