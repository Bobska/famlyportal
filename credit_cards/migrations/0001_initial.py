# Generated by Django 5.2.5 on 2025-09-04 02:48

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nickname', models.CharField(help_text="Nickname for the card (e.g., 'Main Visa', 'Business Card')", max_length=100)),
                ('card_type', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('amex', 'American Express'), ('discover', 'Discover'), ('other', 'Other')], help_text='Type of credit card', max_length=20)),
                ('last_four_digits', models.CharField(help_text='Last 4 digits of card number', max_length=4)),
                ('expiry_month', models.PositiveIntegerField(help_text='Expiry month (1-12)')),
                ('expiry_year', models.PositiveIntegerField(help_text='Expiry year (YYYY)')),
                ('credit_limit', models.DecimalField(decimal_places=2, help_text='Credit limit for this card', max_digits=10)),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current balance on the card', max_digits=10)),
                ('available_credit', models.DecimalField(decimal_places=2, help_text='Available credit (auto-calculated)', max_digits=10)),
                ('minimum_payment', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current minimum payment due', max_digits=10)),
                ('statement_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Last statement balance', max_digits=10)),
                ('statement_date', models.DateField(blank=True, help_text='Last statement date', null=True)),
                ('due_date', models.DateField(blank=True, help_text='Payment due date', null=True)),
                ('apr', models.DecimalField(blank=True, decimal_places=2, help_text='Annual Percentage Rate', max_digits=5, null=True)),
                ('annual_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Annual fee for this card', max_digits=8)),
                ('rewards_program', models.CharField(blank=True, help_text='Rewards program details', max_length=200)),
                ('issuer', models.CharField(help_text='Card issuing bank/company', max_length=100)),
                ('account_holder', models.CharField(help_text='Name on the card', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this card')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this card is active')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Credit Card',
                'verbose_name_plural': 'Credit Cards',
                'ordering': ['nickname'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_date', models.DateField(help_text='Date payment was/will be made')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('payment_method', models.CharField(choices=[('online', 'Online Banking'), ('autopay', 'Auto-pay'), ('check', 'Check'), ('phone', 'Phone Payment'), ('in_person', 'In Person'), ('other', 'Other')], default='online', help_text='Method used to make payment', max_length=20)),
                ('confirmation_number', models.CharField(blank=True, help_text='Payment confirmation number', max_length=100)),
                ('is_scheduled', models.BooleanField(default=False, help_text='Whether this is a scheduled future payment')),
                ('notes', models.TextField(blank=True, help_text='Payment notes')),
                ('credit_card', models.ForeignKey(help_text='Credit card this payment is for', on_delete=django.db.models.deletion.CASCADE, to='credit_cards.creditcard')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_date', models.DateField(help_text='Date of transaction')),
                ('posted_date', models.DateField(blank=True, help_text='Date transaction was posted to account', null=True)),
                ('description', models.CharField(help_text='Transaction description', max_length=200)),
                ('merchant', models.CharField(blank=True, help_text='Merchant name', max_length=100)),
                ('category', models.CharField(blank=True, help_text='Transaction category (e.g., Groceries, Gas, etc.)', max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount (positive for purchases, negative for payments/credits)', max_digits=10)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('payment', 'Payment'), ('fee', 'Fee'), ('interest', 'Interest'), ('credit', 'Credit/Refund'), ('cash_advance', 'Cash Advance'), ('balance_transfer', 'Balance Transfer')], default='purchase', help_text='Type of transaction', max_length=20)),
                ('is_pending', models.BooleanField(default=False, help_text='Whether transaction is still pending')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about transaction')),
                ('reference_number', models.CharField(blank=True, help_text='Transaction reference number', max_length=100)),
                ('credit_card', models.ForeignKey(help_text='Credit card this transaction belongs to', on_delete=django.db.models.deletion.CASCADE, to='credit_cards.creditcard')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
    ]
