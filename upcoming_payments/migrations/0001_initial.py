# Generated by Django 5.2.5 on 2025-09-04 02:48

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Category name (e.g., Utilities, Insurance, Subscriptions)', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('color', models.CharField(default='#007bff', help_text='Hex color code for UI display', max_length=7)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Payment Category',
                'verbose_name_plural': 'Payment Categories',
                'ordering': ['name'],
                'unique_together': {('family', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PaymentInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(help_text='Date this payment is due')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount (can differ from recurring amount)', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('partial', 'Partially Paid'), ('cancelled', 'Cancelled')], default='pending', help_text='Payment status', max_length=20)),
                ('paid_date', models.DateField(blank=True, help_text='Date payment was made', null=True)),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Actual amount paid', max_digits=10, null=True)),
                ('confirmation_number', models.CharField(blank=True, help_text='Payment confirmation number', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Payment notes')),
                ('reminder_sent', models.BooleanField(default=False, help_text='Whether reminder has been sent')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Payment Instance',
                'verbose_name_plural': 'Payment Instances',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reminder_date', models.DateField(help_text='Date reminder should be sent')),
                ('sent_date', models.DateTimeField(blank=True, help_text='When reminder was actually sent', null=True)),
                ('email_sent', models.BooleanField(default=False, help_text='Whether email reminder was sent')),
                ('push_sent', models.BooleanField(default=False, help_text='Whether push notification was sent')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
                ('payment_instance', models.ForeignKey(help_text='Payment instance this reminder is for', on_delete=django.db.models.deletion.CASCADE, to='upcoming_payments.paymentinstance')),
            ],
            options={
                'verbose_name': 'Payment Reminder',
                'verbose_name_plural': 'Payment Reminders',
                'ordering': ['reminder_date'],
            },
        ),
        migrations.CreateModel(
            name='RecurringPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payee', models.CharField(help_text='Who the payment is made to', max_length=200)),
                ('description', models.CharField(help_text='Payment description', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Payment amount', max_digits=10)),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semiannually', 'Semi-annually'), ('annually', 'Annually')], default='monthly', help_text='How often this payment occurs', max_length=20)),
                ('start_date', models.DateField(default=django.utils.timezone.now, help_text='When this recurring payment starts')),
                ('end_date', models.DateField(blank=True, help_text='When this recurring payment ends (optional)', null=True)),
                ('next_due_date', models.DateField(help_text='Next payment due date')),
                ('auto_pay', models.BooleanField(default=False, help_text='Whether this payment is on auto-pay')),
                ('reminder_days', models.PositiveIntegerField(choices=[(1, '1 day before'), (3, '3 days before'), (7, '1 week before'), (14, '2 weeks before'), (30, '1 month before')], default=3, help_text='Days before due date to send reminder')),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this recurring payment is active')),
                ('account_info', models.CharField(blank=True, help_text='Account or reference number', max_length=200)),
                ('category', models.ForeignKey(blank=True, help_text='Payment category', null=True, on_delete=django.db.models.deletion.SET_NULL, to='upcoming_payments.paymentcategory')),
                ('family', models.ForeignKey(help_text='Family this record belongs to', on_delete=django.db.models.deletion.CASCADE, to='accounts.family')),
            ],
            options={
                'verbose_name': 'Recurring Payment',
                'verbose_name_plural': 'Recurring Payments',
                'ordering': ['next_due_date', 'payee'],
            },
        ),
        migrations.AddField(
            model_name='paymentinstance',
            name='recurring_payment',
            field=models.ForeignKey(help_text='The recurring payment this instance belongs to', on_delete=django.db.models.deletion.CASCADE, to='upcoming_payments.recurringpayment'),
        ),
        migrations.AlterUniqueTogether(
            name='paymentinstance',
            unique_together={('recurring_payment', 'due_date')},
        ),
    ]
